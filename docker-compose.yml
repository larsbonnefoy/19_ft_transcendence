version: '3.8'
services:
  api: # nest js
    container_name: "api_dev"
    image: "api_dev"
    environment:
      - NODE_ENV:dev
    build:
      context: ./backNest
      target: "dev"
      dockerfile: Dockerfile
    entrypoint: ["./wait-for-postgres.sh", "npm", "run", "start:dev"]
    # entrypoint: ["npm", "run", "start:dev"]
    env_file:
      - .env
    ports:
      - 3000:3000 # was 9229:9229
    depends_on:
      # - redis
      - postgres
    networks:
      - nesjs-network
    volumes:
      - ./backNest:backNest #./app:/usr/src/app
      - backNest #/usr/src/app/node_modules
    restart: always

  postgres:
    container_name: postgres
    image: postgres:latest
    networks:
      - nesjs-network
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: "${POSTGRES_DB_PREFIX}_${POSTGRES_DB_NAME}"
      PG_DATA: backNest/postgresql/data
    ports:
      - ${POSTGRES_DB_PORT}:${POSTGRES_DB_PORT}
    volumes:
      - pgdata:postgresql/data
    restart: always
  
volumes:
  pgdata:
    driver: local
    driver_opts:
      type: none
      device: backNest
      o: bind

networks:
  nesjs-network:





# pgadmin:
#   links:
#     - postgres:postgres
#   container_name: pgadmin
#   image: dpage/pgadmin4
#   volumes:
#     - ./pgdata/pgadmin:/root/.pgadmin
#   env_file:
#     - .env
#   networks:
#     - nesjs-network
# PGADMIN_DEFAULT_EMAIL=admin@admin.com
# PGADMIN_DEFAULT_PASSWORD=password